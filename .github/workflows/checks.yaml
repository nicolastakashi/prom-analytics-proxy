name: checks
on:
  pull_request:
  push:
    branches:
      - "main"

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.node-version }}"
          check-latest: true
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: "https://registry.npmjs.org"
      - name: Install UI Dependencies
        run: make uidependencies
      - name: Build UI
        run: make uibuild
      - name: Upload UI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
          retention-days: 1

  check-golang:
    needs: setup
    runs-on: ubuntu-latest
    name: Go Code Quality Checks
    if: ${{ github.event_name == 'push' || !contains(github.event.pull_request.changed_files, 'ui/') }}
    steps:
      - uses: actions/checkout@v4
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - uses: actions/setup-go@v5
        with:
          go-version: "${{ env.golang-version }}"
          check-latest: true
          cache: true
      - name: Download UI artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
      - name: Tidy Go modules and check for changes
        run: make tidy && git diff --exit-code
      - name: Run GolangCI Lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          args: --timeout 10m0s
      - name: Test Golang Code
        run: make tests

  format:
    needs: setup
    runs-on: ubuntu-latest
    name: Documentation Formatting Check
    steps:
      - uses: actions/checkout@v4
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - uses: actions/setup-go@v5
        with:
          go-version: "${{ env.golang-version }}"
          check-latest: true
          cache: true
      - name: Download UI artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
      - name: Tidy Go modules
        run: make tidy
      - name: Check Documentation
        run: make check-docs

  build:
    needs: setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
    name: Build API and UI
    steps:
      - uses: actions/checkout@v4
      - name: Import environment variables from file
        run: cat ".github/env" >> $GITHUB_ENV
      - uses: actions/setup-go@v5
        with:
          go-version: "${{ env.golang-version }}"
          check-latest: true
          cache: true
      - name: Download UI artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
      - name: Build API
        run: make build
